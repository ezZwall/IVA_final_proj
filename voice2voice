import speech_recognition as sr
import pyttsx3
from transformers import pipeline
import time

# Initialize Text-to-Speech engine
engine = pyttsx3.init()

# Set voice properties (optional)
voices = engine.getProperty('voices')
engine.setProperty('voice', voices[0].id)  # Change the voice to one available on your system (male/female)

# Initialize Hugging Face Summarization Model (BART or T5)
summarizer = pipeline("summarization", model="facebook/bart-large-cnn")

# Initialize Speech Recognition
recognizer = sr.Recognizer()

# Function to handle real-time audio-to-audio process
def real_time_audio_to_audio():
    with sr.Microphone() as source:
        print("Listening... Please speak.")
        recognizer.adjust_for_ambient_noise(source)
        recognizer.pause_threshold = 1.5  # wait longer before detecting a pause
        try:
            audio = recognizer.listen(source, timeout=5, phrase_time_limit=15)
            text = recognizer.recognize_google(audio)
            print(f"You said: {text}")
            
            summary = summarizer(text, max_length=50, min_length=5, do_sample=False)[0]['summary_text']
            print(f"Summary: {summary}")

            engine.say(summary)
            engine.runAndWait()

        except sr.UnknownValueError:
            print("Sorry, I didn't catch that.")
        except sr.RequestError:
            print("Sorry, there was a problem with the speech service.")
        except Exception as e:
            print(f"An error occurred: {e}")


# Main loop for continuous real-time audio processing
if __name__ == "__main__":
    while True:
        real_time_audio_to_audio()
        time.sleep(2)  # Small delay before starting to listen again





